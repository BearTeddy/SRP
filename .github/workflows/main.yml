
name: CICD Action

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    steps:
      - uses: actions/checkout@v2
      - name: Build docker-compose
        run: docker-compose -f docker-compose.yml up --build -d
      
  sca:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
       
      - name: NPM Audit Comment
        continue-on-error: true
        uses: wx-jayesh/actions-npm-audit-comment@v1.0.0
        with:
          package_json_path: srp_app_nodejs/
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Safety own srpAPP
        run: |
         pip install safety
         safety check -r srp_app/requirements.txt > logs/safteyresult.log || true
      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/safteyresult.log

      - name: Safety
        continue-on-error: true
        run: |
         pip install safety
         safety check -r srp_app/requirements.txt > logs/safteyresult.log
         
      - name: Pyraider
        continue-on-error: true
        run: |
          pip install pyraider
          pyraider check -f srp_app/requirements.txt > logs/pyraiderresult.json

      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs/ 
  
  test:
    needs: [build, sca]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Build Image for testing
        run: docker-compose -f docker-compose.yml up --build -d 
        
      - name: Set up Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          pip install -r tests/requirements.txt
          
  sast:
    needs: [build, sca]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 

      - name: Python security check using Bandit
        continue-on-error: true
        uses: Joel-hanson/bandit-report-artifacts@V1
        with:
          project_path: .
          ignore_failure: true

      - uses: jpetrucciani/bandit-check@master
        continue-on-error: true
        with:
          path: '.'
          bandit_flags: '-lll -o logs/jpetruccianioutput.json -f json'
    
      - uses: actions/upload-artifact@v2
        with:
          name: logs
          path: logs

  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
    
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
    
      - name: Build and push srp_app
        uses: docker/build-push-action@v2
        with:
          context: .
          file: srp_app/Dockerfile
          push: true
          tags: bearteddy21/4302-project:srpapp

      - name: Build and push srp_app_f
        uses: docker/build-push-action@v2
        with:
          context: .
          file: srp_app_fail/Dockerfile
          push: true
          tags: bearteddy21/4302-project:srp_app_fail

      - name: Build and push srp_app_nodejs
        uses: docker/build-push-action@v2
        with:
          context: .
          file: srp_app_nodejs/Dockerfile
          push: true
          tags: bearteddy21/4302-project:srp_app_nodejs

      - name: Build and push srp_app_python

        uses: docker/build-push-action@v2
        with:
          context: .
          file: srp_app_python/Dockerfile
          push: true
          tags: bearteddy21/4302-project:srp_app_python

  container-scan:
   needs: [deploy]
   runs-on: ubuntu-latest
 
   steps:

     - name: login to Docker
       uses: docker/login-action@v1 
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
            
     - name: Run Dockle
       uses: erzz/dockle-action@v1.2.0
       with:
         image: bearteddy21/4302-project:srp_app_python
         report-format: json
         report-name: dockle-report
      - name: Run Dockle
       uses: erzz/dockle-action@v1.2.0
       with:
         image: bearteddy21/4302-project:srp_app_nodejs
         report-format: json
         report-name: dockle-report
      - name: Run Dockle
       uses: erzz/dockle-action@v1.2.0
       with:
         image: bearteddy21/4302-project::srp_app_fail
         report-format: json
         report-name: dockle-report
      - name: Run Dockle
       uses: erzz/dockle-action@v1.2.0
       with:
         image: bearteddy21/4302-project::srpapp
         report-format: json
         report-name: dockle-report
        
     - name: Upload Report
       uses: actions/upload-artifact@v2
       if: always()
       with:
         name: Dockle Report
         path: dockle-report.json
 
  dast:
   needs: [container-scan]
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v2
    
     - name: Build Image for testing
       run: docker-compose -f docker-compose.yml up --build -d
 
     - name: ZAP Scan
       uses: zaproxy/action-baseline@v0.6.1
       with:
         token: ${{ secrets.GITHUB_TOKEN }}
         docker_name: 'owasp/zap2docker-stable'
         target: 'http://localhost:5000'
         cmd_options: '-a'     
